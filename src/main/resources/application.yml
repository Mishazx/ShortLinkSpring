spring:
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
          
          yandex:
            client-id: ${YANDEX_CLIENT_ID}
            client-secret: ${YANDEX_CLIENT_SECRET}
            client-name: Yandex
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - email
              - login:info
          
          vk:
            client-id: ${VK_CLIENT_ID}
            client-secret: ${VK_CLIENT_SECRET}
            client-name: VK
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile

        provider:
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token
            user-info-uri: https://login.yandex.ru/info
            user-name-attribute: default_email
          
          vk:
            authorization-uri: https://oauth.vk.com/authorize
            token-uri: https://oauth.vk.com/access_token
            user-info-uri: https://api.vk.com/method/users.get?v=5.131
            user-name-attribute: id 

  datasource:
    url: jdbc:postgresql://localhost:5432/mydatabase
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  flyway:
    enabled: true
    baseline-on-migrate: true
    clean-on-validation-error: true
    clean-disabled: false
    locations: classpath:db/migration
    schemas: public
    validate-on-migrate: true

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  session:
    store-type: redis
    redis:
      namespace: spring:session
    timeout: 30m
    
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false 

  redis:
    host: localhost
    port: 6379 