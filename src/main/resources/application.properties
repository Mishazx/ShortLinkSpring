# Application
spring.application.name=ShortLinkSpring

# Database Configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Migration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=false

# Session Configuration
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-postgresql.sql
spring.session.jdbc.table-name=SPRING_SESSION
spring.session.timeout=30m
spring.session.jdbc.cleanup-cron=0 0 4 * * *
spring.session.jdbc.platform=postgresql
spring.session.jdbc.serializer.class-name=org.springframework.session.jdbc.PostgreSqlJdbcIndexedSessionRepository$PostgreSqlSessionSerializer

# Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=file:src/main/resources/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true

# Web Configuration
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/**
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.main.allow-bean-definition-overriding=true

# Development Tools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.poll-interval=2s
spring.devtools.restart.quiet-period=1s

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# OAuth2 - Yandex
spring.security.oauth2.client.registration.yandex.client-id=${YANDEX_CLIENT_ID}
spring.security.oauth2.client.registration.yandex.client-secret=${YANDEX_CLIENT_SECRET}
spring.security.oauth2.client.registration.yandex.scope=login:email,login:info
spring.security.oauth2.client.registration.yandex.redirect-uri=${YANDEX_REDIRECT_URI}
spring.security.oauth2.client.registration.yandex.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.yandex.authorization-uri=https://oauth.yandex.ru/authorize
spring.security.oauth2.client.provider.yandex.token-uri=https://oauth.yandex.ru/token
spring.security.oauth2.client.provider.yandex.user-info-uri=https://login.yandex.ru/info
spring.security.oauth2.client.provider.yandex.user-name-attribute=id

# OAuth2 - GitHub
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri=${GITHUB_REDIRECT_URI}
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

# URL Service Configuration
url.default-click-limit=${DEFAULT_CLICK_LIMIT:100}
url.default-expiration-hours=${DEFAULT_EXPIRATION_HOURS:24}

# Server
server.port=${PORT_SERVER:8080}
server.servlet.session.tracking-modes=cookie 